global function vag_Init

bool isFiring = false

void function vag_Init()
{
    for( int key = 0; key < 132; key++ )
    {
        if( GetKeyBinding( key ) == "+attack" )
        {
            RegisterButtonPressedCallback( key, vagFiringState)
            RegisterButtonReleasedCallback( key, vagStopFiringState )
        }
    }
    if( GetMapName() == "mp_lobby" )
    {
        return
    }
    thread vag_Thread()
}

void function vag_Thread()
{
    while( true )
    {
        WaitFrame()
        if( GetConVarInt( "vag_enabled" ) == 0 )
        {
            continue
        }
        if( GetLocalClientPlayer() != null )
        {
            TraceResults results = GetViewTrace( GetLocalClientPlayer() )

            if( IsValid( results.hitEnt ) && results.hitEnt.IsTitan() )
            {
                if( results.hitEnt.GetTeam() == GetLocalClientPlayer().GetTeam() )
                {
                    continue
                }
                //print("[VAG][DEBUG] TIME : " + Time() + " TITAN TRUE")
                if( results.hitEnt != null && results.hitEnt.GetActiveWeapon() != null && results.hitEnt.GetActiveWeapon().GetWeaponClassName() == "mp_titanweapon_vortex_shield_ion" )
                {
                    //print("[VAG][DEBUG] TIME : " + Time() + " VORTEX SHIELD OUT")
                    GetLocalClientPlayer().ClientCommand( "-attack" )
                }
                if( isFiring == true && results.hitEnt != null && results.hitEnt.GetActiveWeapon() != null && results.hitEnt.GetActiveWeapon().GetWeaponClassName() != "mp_titanweapon_vortex_shield_ion" )
                {
                    GetLocalClientPlayer().ClientCommand( "+attack" )
                }
            }
        }
    }
}

void function vagFiringState( int buttonEnum ) {
    isFiring = true
}

void function vagStopFiringState( int buttonEnum ) {
    isFiring = false
    GetLocalClientPlayer().ClientCommand( "-attack" )
}
